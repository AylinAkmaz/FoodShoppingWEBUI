@using FoodShoppingWEBUI.Core.DTO;
@using FoodShoppingWEBUI.Core.ViewModel;
@model ProductViewModel

@{
    ViewData["Title"] = "Ürünler";
    Layout = "~/Areas/AdminPanel/Views/_Layout.cshtml";
}

@Html.AntiForgeryToken()
<div class="card">
    <div class="card-header">
        <h3 class="card-title">Ürünler</h3>
        <div class="card-tools">
            <button type="button" class="btn btn-block btn-warning" data-toggle="modal" data-target="#modal-FoodDetail">Yemek Mağazası</button>
            <button type="button" class="btn btn-block btn-info" data-toggle="modal" data-target="#modal-YeniÜrün">Ekle</button>

        </div>
    </div>
    <div class="card-body">

        <table id="tblProducts" class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th style="width: 10px">#</th>
                    <th>Ürün Resmi</th>
                    <th>Ürün Adı</th>
                    <th>Kategorisi</th>
                    <th>Birim Fiyatı</th>
                    <th style="width:20%"></th>

                </tr>
            </thead>
            <tbody>
                @{
                    for (int i = 0; i < Model.Product.Count(); i++)
                    {
                        string imagePath = "/MediaUpload/" + @Model.Product[i].FeaturedImage;

                        <tr>
                            <td>@Convert.ToInt32(i+1)</td>
                            <td>
                                <a href="@imagePath" data-toggle="lightbox" data-title="@Model.Product[i].Name">
                                    <img src="@imagePath" class="img-fluid mb-2" alt="black sample" width="100" />
                                </a>



                            <td>@Model.Product[i].Name</td>
                            <td>@Model.Product[i].FoodDetailName</td>
                            <td>@Model.Product[i].UnitPrice</td>
                            <td>
                                <div class="btn-group">
                                    <button type="button" class="btn btn-info btnProductDetail" data-guid=@Model.Product[i].Guid data-toggle="modal" data-target="#modal-ProductDetail">Güncelle</button>
                                    <button type="button" class="btn btn-danger btnRemoveProduct" data-guid=@Model.Product[i].Guid>Sil</button>
                                </div>
                            </td>
                        </tr>
                    }
                }



            </tbody>
        </table>


    </div>

</div>
<div class="modal fade" id="modal-FoodDetail">
    <div class="modal-dialog modal-YeniÜrün">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Mağzalar</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="form-group">
                <label for="ddlProductFoodDetail_Add">Mağzası</label>
                <select class="custom-select rounded-0" id="ddlProductFoodDetail_Add">
                    @{
                        for (int i = 0; i < Model.FoodDetail.Count; i++)
                        {
                            <option value="@Model.FoodDetail[i].Guid">@Model.FoodDetail[i].Name</option>
                        }
                    }


                </select>
            </div>
            <div class="modal-footer justify-content-between">
                <button type="button" class="btn btn-default" data-dismiss="modal">Kapat</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="modal fade" id="modal-YeniÜrün">
    <div class="modal-dialog ">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Yeni Ürün</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="txtÜrünAd_Add">Ürün Adı</label>
                    <input type="text" class="form-control" id="txtÜrünAd_Add">
                </div>
            </div>
            <div class="form-group">
                <label for="txtProductUnitPrice_Add">Birim Fiyatı</label>
                <input type="text" class="form-control" id="txtProductUnitPrice_Add">
            </div>

            <div class="form-group">
                <label for="txtProductDescription_Add">Ürün Açıklaması</label>
                <textarea class="form-control" rows="5" id="txtProductDescription_Add"></textarea>
            </div>

            <div class="form-group">
                <label for="ddlProductFoodDetail">Ürün Mağzası</label>
                <select class="custom-select rounded-0" id="ddlProductFoodDetail_Add">
                    @{
                        for (int i = 0; i < Model.FoodDetail.Count; i++)
                        {
                            <option value="@Model.FoodDetail[i].Guid">@Model.FoodDetail[i].Name</option>
                        }
                    }


                </select>
            </div>
            <div class="form-group">
                <label for="txtProductFeaturedImage_Add">Öne Çıkan Görsel</label>
                <div class="input-group">
                    <div class="custom-file">
                        <input type="file" class="custom-file-input" id="fuProductFeaturedImage_Add">
                        <label class="custom-file-label" for="fuProductFeaturedImage_Add">Choose file</label>
                    </div>

                </div>
            </div>
            <div class="modal-footer justify-content-between">
                <button type="button" class="btn btn-default" data-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-primary" id="btnAddProduct">Kaydet</button>
            </div>
        </div>
       
    </div>
</div>



<div class="modal fade" id="modal-ProductUpdate">
    <div class="modal-dialog ">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Ürün Güncelle</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="txtProductName_Update">Ürün Adı</label>
                    <input type="text" class="form-control" id="txtProductName_Update">
                </div>
                <div class="form-group">
                    <label for="txtProductUnitPrice_Update">Birim Fiyatı</label>
                    <input type="text" class="form-control" id="txtProductUnitPrice_Update">
                </div>

                <div class="form-group">
                    <label for="txtProductDescription_Update">Ürün Açıklaması</label>
                    <textarea class="form-control" rows="5" id="txtProductDescription_Update"></textarea>
                </div>

                <div class="form-group">
                    <label for="ddlProductFoodDetail">Mağzası</label>
                    <select class="custom-select rounded-0" id="ddlProductFoodDetail_Update">
                        @{
                            for (int i = 0; i < Model.FoodDetail.Count; i++)
                            {
                                <option value="@Model.FoodDetail[i].Guid">@Model.FoodDetail[i].Name</option>
                            }
                        }


                    </select>
                </div>
                <div class="form-group">
                    <label for="fuProductFeaturedImage">Öne Çıkan Görsel</label>
                    <div class="input-group">
                        <div class="custom-file">
                            <input type="file" class="custom-file-input" id="fuProductFeaturedImage_Update">
                            <label class="custom-file-label" for="fuProductFeaturedImage_Update">Choose file</label>
                        </div>

                    </div>
                </div>
                <div class="modal-footer justify-content-between">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Kapat</button>
                    <button type="button" class="btn btn-primary" id="btnUpdateProduct">Kaydet</button>
                </div>
            </div>
           
        </div>
    </div>
</div>



<script>
    $(function () {
        $("#tblProducts").DataTable({
            "responsive": true,
            "lengthChange": false,
            "autoWidth": false,
            "buttons": ["copy", "csv", "excel", "pdf", "print", "colvis"]
        }).buttons().container().appendTo('#tblKategoriler_wrapper .col-md-6:eq(0)');

        $('#btnAddProduct').click(function () {

            var productDTO = {
                Name: $('#txtProductName_Add').val(),
                FoodDetailGuid: $('#ddlProductCategory_Add').val(),
                Description: $('#txtProductDescription_Add').val(),
                UnitPrice: $('#txtProductUnitPrice_Add').val()
            }

            var files = $('#fuProductFeaturedImage_Add').prop('files');

            var formData = new FormData();
            formData.append("Name", productDTO.Name);
            formData.append("CategoryGuid", productDTO.FoodDetailGuid);
            formData.append("Description", productDTO.Description);
            formData.append("UnitPrice", productDTO.UnitPrice);
            formData.append("productImage", files[0]);


            $.ajax({
                url: '/Admin/AddProduct',
                type: 'post',
                data: formData,
                cahce: false,
                contentType: false,
                processData: false,
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN", $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                success: function (response) {
                    if (response.success) {

                        Swal.fire({
                            position: 'top-end',
                            icon: 'success',
                            title: 'Ürün Başarıyla Eklendi',
                            showConfirmButton: false,
                            timer: 3000
                        })
                        setTimeout(function () { window.location.reload() }, 3000);

                    }
                    else {

                        var HataBilgisi = response.HataBilgisi;
                        var Hatalar = '';
                        for (var i = 0; i < HataBilgisi.Hata.length; i++) {
                            Hatalar += HataBilgisi.Hata[i] + '</br>';
                        }

                        Swal.fire({
                            icon: 'error',
                            title: HataBilgisi.HataAciklama,
                            html: Hatalar
                        })


                    }
                },
                error: function (err) {

                    Swal.fire({
                        icon: 'error',
                        title: "HATA OLUŞTU. TEKRAR DENEYİNİZ.",
                    })
                }
            });

        });

        $('.btnProductDetail').click(function () {
            var guid = $(this).attr('data-guid');
            $.ajax({
                url: '/Admin/Ürün/' + guid,
                type: 'get',
                success: function (response) {
                    if (response.success) {
                        $('#modal-ProductUpdate').modal('show');
                        $('#txtProductName_Update').val(response.data.Name);
                        $('#txtProductUnitPrice_Update').val(response.data.UnitPrice);
                        $('#txtProductDescription_Update').val(response.data.Description);

                        $('#btnUpdateProduct').attr('data-Guid', guid)

                        const select = document.querySelector('#ddlProductFoodDetail_Update')
                        select.value = response.data.FoodDetailGuid;
                    }
                    else {

                        var HataBilgisi = response.HataBilgisi;
                        var Hatalar = '';
                        if (HataBilgisi.Hata != null) {
                            for (var i = 0; i < HataBilgisi.Hata.length; i++) {
                                Hatalar += HataBilgisi.Hata[i] + '</br>';
                            }
                        }


                        Swal.fire({
                            icon: 'error',
                            title: HataBilgisi.HataAciklama,
                            html: Hatalar
                        })


                    }
                },
                error: function (err) {

                    Swal.fire({
                        icon: 'error',
                        title: "HATA OLUŞTU. TEKRAR DENEYİNİZ.",
                    })
                }
            });


        });


        $('#btnUpdateProduct').click(function () {

            var productDTO = {
                Name: $('#txtProductName_Update').val(),
                FoodDetailGuid: $('#ddlProductFoodDetail_Update').val(),
                Description: $('#txtProductDescription_Update').val(),
                UnitPrice: $('#txtProductUnitPrice_Update').val(),
                Guid: $(this).attr('data-Guid')
            }

            var files = $('#fuProductFeaturedImage_Update').prop('files');

            var formData = new FormData();
            formData.append("Name", productDTO.Name);
            formData.append("FoodDetailGuid", productDTO.FoodDetailGuid);
            formData.append("Description", productDTO.Description);
            formData.append("UnitPrice", productDTO.UnitPrice);
            formData.append("Guid", productDTO.Guid);
            formData.append("productImage", files[0]);



            $.ajax({
                url: '/Admin/UpdateProduct',
                type: 'post',
                data: formData,
                cahce: false,
                contentType: false,
                processData: false,
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN", $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                success: function (response) {
                    if (response.success) {

                        Swal.fire({
                            position: 'top-end',
                            icon: 'success',
                            title: 'Ürün Başarıyla Güncellendi',
                            showConfirmButton: false,
                            timer: 3000
                        })
                        setTimeout(function () { window.location.reload() }, 3000);

                    }
                    else {

                        var HataBilgisi = response.HataBilgisi;
                        var Hatalar = '';
                        for (var i = 0; i < HataBilgisi.Hata.length; i++) {
                            Hatalar += HataBilgisi.Hata[i] + '</br>';
                        }

                        Swal.fire({
                            icon: 'error',
                            title: HataBilgisi.HataAciklama,
                            html: Hatalar
                        })


                    }
                },
                error: function (err) {

                    Swal.fire({
                        icon: 'error',
                        title: "HATA OLUŞTU. TEKRAR DENEYİNİZ.",
                    })
                }
            });

        });


        $('.btnRemoveProduct').click(function () {
            var productGuid = $(this).attr('data-Guid');

            Swal.fire({
                title: 'UYARI!',
                text: "'Ürünü Silmek İstediğinizden Emin misiniz?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Evet!',
                cancelButtonText: 'Hayır',
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Admin/RemoveProduct/' + productGuid,
                        type: 'post',
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader("XSRF-TOKEN", $('input:hidden[name="__RequestVerificationToken"]').val());
                        },
                        success: function (response) {
                            if (response.success) {

                                Swal.fire({
                                    position: 'top-end',
                                    icon: 'success',
                                    title: 'Ürün Başarıyla Silindi',
                                    showConfirmButton: false,
                                    timer: 3000
                                })
                                setTimeout(function () { window.location.reload() }, 3000);

                            }
                            else {

                                var HataBilgisi = response.HataBilgisi;
                                var Hatalar = '';
                                for (var i = 0; i < HataBilgisi.Hata.length; i++) {
                                    Hatalar += HataBilgisi.Hata[i] + '</br>';
                                }

                                Swal.fire({
                                    icon: 'error',
                                    title: HataBilgisi.HataAciklama,
                                    html: Hatalar
                                })


                            }
                        },
                        error: function (err) {

                            Swal.fire({
                                icon: 'error',
                                title: "HATA OLUŞTU. TEKRAR DENEYİNİZ.",
                            })
                        }
                    });
                }
            })
        });

    })

</script>
