@using FoodShoppingWEBUI.Core.ViewModel;
@model StoresViewModel
@{
    ViewData["Title"] = "Market";
    Layout = "~/Areas/AdminPanel/Views/_Layout.cshtml";
}

@Html.AntiForgeryToken()
<div class="card">
    <div class="card-header">
        <h3 class="card-title">Market</h3>
        <div class="card-tools">
            <button type="button" class="btn btn-block btn-warning" data-toggle="modal" data-target="#modal-StoreCategories">Kategoriler</button>
            <button type="button" class="btn btn-block btn-info" data-toggle="modal" data-target="#modal-NewStores">Ekle</button>


        </div>
    </div>
    <div class="card-body">

        <table id="tblStores" class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th style="width: 10px">#</th>
                    <th>Bölüm Adı</th>
                    <th>Kategoriler</th>

                </tr>
            </thead>
            <tbody>
                @{
                    for (int i = 0; i < Model.Stores.Count(); i++)
                    {
                        <tr>
                            <td>@Convert.ToInt32(i+1)</td>
                            <td>@Model.Stores[i].Name</td>
                            <td>@Model.StoreCategories[i].Name</td>
                            
                        </tr>
                    }
                }




            </tbody>
        </table>


    </div>

</div>

<div class="modal fade" id="modal-StoreCategories">
    <div class="modal-dialog modal-NewStores">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Kategoriler</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @await Component.InvokeAsync("StoreCategories",Model.StoreCategories)
            </div>
            <div class="modal-footer justify-content-between">
                <button type="button" class="btn btn-default" data-dismiss="modal">Kapat</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<div class="modal fade" id="modal-NewStores">
    <div class="modal-dialog modal-NewStores">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Yeni Market</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="txtStoresName_Add">Market Adı</label>
                    <input type="text" class="form-control" id="txtStoresName_Add">
                </div>
               

                <div class="form-group">
                    <label for="ddlStoreStoreCategory_Add">Kategori</label>
                    <select class="custom-select rounded-0" id="ddlStoreStoreCategory_Add">
                        @{
                            for (int i = 0; i < Model.StoreCategories.Count; i++)
                            {
                                <option value="@Model.StoreCategories[i].Guid">@Model.StoreCategories[i].Name</option>
                            }
                        }


                    </select>
                </div>
                

            </div>
            <div class="modal-footer justify-content-between">
                <button type="button" class="btn btn-default" data-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-primary" id="btnAddStores">Kaydet</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>



<script>
    $(function () {
        $("#tblStores").DataTable({
            "responsive": true,
            "lengthChange": false,
            "autoWidth": false,
            "buttons": ["copy", "csv", "excel", "pdf", "print", "colvis"]
        }).buttons().container().appendTo('#tblStores_wrapper .col-md-6:eq(0)');

        $('#btnAddStores').click(function () {

            var stores = {
                Name: $('#txtStoresName_Add').val(),
                StoreCategoryGuid: $('#ddlStoreStoreCategory_Add').val(),
            }


            var formData = new FormData();
            formData.append("Name", stores.Name);
            formData.append("StoreCategoryGuid", stores.StoreCategoryGuid);


            $.ajax({
                url: '/Admin/AddStores',
                type: 'POST',
                data: formData,
                cahce: false,
                contentType: false,
                processData: false,
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN", $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                success: function (response) {
                    if (response.success) {

                        Swal.fire({
                            position: 'top-end',
                            icon: 'success',
                            title: 'Market Başarıyla Eklendi',
                            showConfirmButton: false,
                            timer: 3000
                        })
                        setTimeout(function () { window.location.reload() }, 3000);

                    }
                    else {

                        var HataBilgisi = response.HataBilgisi;
                        var Hatalar = '';
                        for (var i = 0; i < HataBilgisi.Hata.length; i++) {
                            Hatalar += HataBilgisi.Hata[i] + '</br>';
                        }

                        Swal.fire({
                            icon: 'error',
                            title: HataBilgisi.HataAciklama,
                            html: Hatalar
                        })


                    }
                },
                error: function (err) {

                    Swal.fire({
                        icon: 'error',
                        title: "HATA OLUŞTU. TEKRAR DENEYİNİZ.",
                    })
                }
            });

        });




    })

</script>

